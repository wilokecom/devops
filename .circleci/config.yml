version: 2.0

references:
  # Environment variables
  #
  WP_CORE_DIR: &WP_CORE_DIR
                 ./../wordpress
  WP_HOST: &WP_HOST
             wiloke-dev-ops.test
  WP_ORG_PLUGIN_NAME: &WP_ORG_PLUGIN_NAME
                        devops
  WP_ORG_USERNAME: &WP_ORG_USERNAME
                     carlalexander
  WP_PATH: &WP_PATH
             ./wp
  # Default container configuration
  #
  container_config: &container_config
    docker:
      - image: circleci/php:7.2-apache
        enviroment:
          MYSQL_DATABASE: wordpress
          MYSQL_USER: wordpress
          MYSQL_PASSWORD: wordpress
    working_directory: ~/wordpress

  workspace_root: &workspace_root
                    /tmp

  attach_workspace: &attach_workspace
    attach_workspace:
      at: *workspace_root

  copy_vendor: &copy_vendor
    run:
      name: Copy vendor directory
      command: cp -r /tmp/vendor ./../wordpress/wp-content/plugins/devops
  cp_main_plugin: &cp_main_plugin
    run:
      name:  Copy the main to plugins folder
      command: rsync -av --progress . wp/wp-content/plugins/devops --exclude wp
  # Default configuration for all behat testing jobs
  #
  behat_job: &behat_job
    <<: *container_config
    docker:
      - image: circleci/php:7.2-apache
      - image: circleci/mysql:5.6
        enviroment:
          MYSQL_INITDB_SKIP_TZINFO: CONVERT_TZ()
          MYSQL_HOST: 127.0.0.1
          MYSQL_TCP_PORT: 3306
          MYSQL_UNIX_PORT: 3306
          MYSQL_ALLOW_EMPTY_PASSWORD: true
          MYSQL_ROOT_PASSWORD: ''
          MYSQL_DATABASE: wordpress
          PHPUNIT: ./wp/wp-content/plugins/devops/vendor/bin/phpunit
    steps:
      - checkout
      - run:
          name: Add WordPress host to hosts file
          command: echo "127.0.0.1 ${WP_HOST}" | sudo tee -a /etc/hosts
      - *attach_workspace
      - run:
          # Our primary container isn't MYSQL so run a sleep command until it's ready.
          name: Waiting for MySQL to be ready
          command: |
            for i in `seq 1 10`;
            do
              nc -z 127.0.0.1 3306 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for MySQL && exit 1
      - run:
          name: Install MySQL client
          command: |
            sudo apt-get update && \
            sudo apt-get -y install \
              default-mysql-client \
              libjpeg-dev \
              libpng-dev \
              libzip-dev \
              php-curl
      - run:
          name: Install MySQL PHP extension
          command: sudo docker-php-ext-install mysqli
      - run:
          name: Create Mysql Database
          command: mysql -h 127.0.0.1 -u root -e "create database wordpress;"
#      - run:
#          name: Start Mysql
#          command: |
#            echo "ServerName localhost
#            <Directory ${working_directory}>
#                  Options Indexes FollowSymLinks
#                  AllowOverride All
#                  Require all granted
#            </Directory>" | sudo tee -a /etc/apache2/conf-available/localhost.conf > /dev/null
#
#            echo "<VirtualHost *:80>
#                  DocumentRoot ${working_directory}
#            </VirtualHost>" | sudo tee -a /etc/apache2/sites-available/localhost.conf > /dev/null
#            sudo service apache2 restart
      - run:
          name: Install WordPress CLI
          command: .circleci/install-wp-cli.sh
      - run:
          name: Start PHP server
          command: sudo php -S $WP_HOST:80 -t ${WP_CORE_DIR}
          background: true
#      - run:
#          name: Check WP folder
#          command: ls -la wp
#      - run:
#          name: Install rsync
#          command: sudo apt install rsync
#      - run:
#          name: Before copying the main plugin
#          command: ls -la
#      - *cp_main_plugin
      - run:
          name: Checkout github plugin
          command: cd ./../wordpress/wp-content/plugins/ && git clone https://github.com/wilokecom/devops.git
      - *copy_vendor
      - run:
          name: Generate Autoload
          command: cd ./../wordpress/wp-content/plugins/devops & composer dump-autoload
      - run:
          name: Check Plugin folder
          command: ls -la ./../wordpress/wp-content/plugins/devops/vendor
      - run:
         name: Check WP folder
         command: ls -la
      - run:
          name: Check WP folder 1
          command: cd ../ && ls -la
      - run:
          name: Check WP folder 2
          command: cd ../wordpress && ls -la
      - run:
          name: Check WP folder 3
          command: cd ../../ && ls -la
      - run:
         name: Check WP folder 4
         command: cd ../wordpress/wp-content/plugins/devops/vendor && ls -la
      - run:
          name: Active the plugin
          command: ./wp-cli.phar plugin activate devops
      - run:
          name: PHP Unit Test
          command: ./../wordpress/wp-content/plugins/devops/vendor/bin/phpunit tests
  # Default configuration for all phpunit testing jobs
  #
  phpunit_job: &phpunit_job
    steps:
      - checkout
      - *attach_workspace
      - *copy_vendor

jobs:
  build:
    <<: *container_config
    steps:
      - checkout
      - run:
          name: Update Composer
          command: sudo composer self-update
      - restore_cache: # special step to restore the dependency cache if `composer.lock` does not change
          keys:
            - composer-v1-{{ checksum "composer.lock" }}
            # fallback to using the latest cache if no exact match is found (See https://circleci.com/docs/2.0/caching/)
            - composer-v1-
      - run:
          name: Installing Composer
          command: composer install -n --prefer-dist
      - run:
          name: Generate autoload
          command: composer dump-autoload
      - persist_to_workspace:
          root: .
          paths:
            - vendor
#  test_php72:
#    <<: *phpunit_job
#    docker:
#      - image: circleci/php:7.2-apache
  acceptance_singlesite:
    <<: *behat_job
    environment:
      - WP_CORE_DIR: *WP_CORE_DIR
      - WP_HOST: *WP_HOST
      - WP_TYPE: singlesite
      - WP_PATH: *WP_PATH

workflows:
  version: 2
  build_test_deploy:
    jobs:
      - build
#      - test_php72:
#          requires:
#            - build
      - acceptance_singlesite:
          requires:
            - build
